import{d as i}from"./index-g7Qn_UOI.js";import{f as n}from"./fetchWithAuth-CvqqA0bk.js";const h=i("housings",{state:()=>({housings:[],selectedHousingId:null,loaded:!1,isFirstRun:!0}),actions:{async fetchHousings(){try{const s=await n("http://localhost:3000/housings",{method:"GET"});if(!s.ok){const t=await s.json();throw new Error(t.message||"Network response was not ok")}const o=await s.json();this.housings=o.data,this.selectedHousingId=this.housings.length>0?this.housings[0].id_housing:null,console.log("Housings fetched successfully:",this.selectedHousingId)}catch(s){throw s}finally{this.loaded=!0}},async addHousing(s){console.log("housing",s);try{const o=await n("http://localhost:3000/housings",{method:"POST",body:JSON.stringify(s)});if(!o.ok){const e=await o.json();throw new Error(e.message||"Network response was not ok")}const t=await o.json();this.housings.push(t.data)}catch(o){throw o}},async updateHousing(s){let o=this.selectedHousingId;try{const t=await n(`http://localhost:3000/housings/${o}`,{method:"PATCH",body:JSON.stringify(s)});if(!t.ok){const e=await t.json();throw new Error(e.message||"Network response was not ok")}await this.fetchHousings()}catch(t){throw t}}},persist:{storage:sessionStorage,paths:["housings","selectedHousingId"]}});export{h as u};

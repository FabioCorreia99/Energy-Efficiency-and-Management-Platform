import{d as c,v as a,U as n}from"./index-g7Qn_UOI.js";const h=c("widgets",{state:()=>({userWidgets:[]}),persist:!0,getters:{},actions:{async fetchUserWidgets(){const s=a(),e=[{type:1,title:"Corrent-Consumption",body:{name:"Current Energy Consumption",earn:"4,42,236",x:0,y:0,w:3,h:2}},{type:1,title:"Energy-Production",body:{name:"Energy Production Today",earn:"78,250",x:3,y:0,w:3,h:2}},{type:1,title:"Total-Consumption",body:{name:"Total Consumption this year",earn:"18,800",x:6,y:0,w:3,h:2}},{type:1,title:"Total-Expenses",body:{name:"Expected Expenses (This Month)",earn:"$35,078",color:"error",x:9,y:0,w:3,h:2}},{type:5,title:"Graphic",body:{x:0,y:6,w:6,h:3}},{type:2,title:"Column",body:{x:0,y:9,w:12,h:3}},{type:3,title:"Vertical-Column",body:{x:6,y:3,w:6,h:3}}];if(this.userWidgets.length==0){const r=await fetch(`${n}/users/${s.user.id_user}/widgets`,{method:"GET",headers:{"Content-Type":"application/json",authorization:`Bearer ${s.token}`}});if(!r.ok)throw new Error("Failed to fetch user widgets");let o=(await r.json()).data.widgets||[];o.forEach(t=>{t.body=JSON.parse(t.body),t.type=parseInt(t.type),delete t.id_user}),e.forEach(t=>{o.some(u=>u.title.trim()===t.title.trim())||(o.push(t),this.addWidget(t))}),this.userWidgets=o}},updateWidget(s,e,r){this.userWidgets.forEach(i=>{i.title==r&&(i.body.x=s,i.body.y=e)})},async updateOneWidget(s,e,r){const i=a(),o={x:e,y:r};try{const t=await fetch(`${n}/widgets/${s}?id_user=${i.user.id_user}`,{method:"PATCH",credentials:"include",headers:{"Content-Type":"application/json",authorization:`Bearer ${i.token}`},body:JSON.stringify(o)});if(!t.ok)throw new Error("Failed to update widget");const d=await t.json();console.log("Widget updated",d)}catch(t){console.log(t)}},async updateDBWidgets(s=this.userWidgets.map(e=>e.title)){console.log("updateDBWidgets");const e=a();try{const r=this.userWidgets.filter(o=>s.includes(o.title)).map(o=>fetch(`${n}/widgets/${o.title.trim()}?id_user=${e.user.id_user}`,{method:"PATCH",credentials:"include",headers:{"Content-Type":"application/json",authorization:`Bearer ${e.token}`},body:JSON.stringify(o.body)}));(await Promise.all(r)).forEach((o,t)=>{console.log(`Response for widget "${s[t]}":`,o.status),o.ok||console.error(`Erro ao atualizar widget "${s[t]}":`,o.statusText)})}catch(r){console.error("Erro de rede ao atualizar widgets:",r)}},async addWidget(s){try{const e=a();s.id_user=e.user.id_user;const r=await fetch(`${n}/widgets`,{method:"POST",credentials:"include",headers:{"Content-Type":"application/json",authorization:`Bearer ${e.token}`},body:JSON.stringify(s)});if(!r.ok)throw new Error("Failed to add widget");const i=await r.json();this.userWidgets.push(i)}catch(e){console.log(e)}}}});export{h as u};
